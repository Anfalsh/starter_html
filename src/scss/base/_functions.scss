/* ---------------------------------------------------
///////////////////// FONT FACE ///////////////////////
---------------------------------------------------- */

@mixin font-face($name, $path, $weight: null, $style: null, $exts: otf eot ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

@mixin fontsize($size) {
	font-size: $size * 1px;
	font-size: $size * 0.1rem;
}



//
//@mixin glitch(){
//	position:relative;
//	color:$black;
//	
//	@keyframes noise-anim {
//	  0% {   clip: rect(83px, 9999px, 23px, 0); }
//	  5% {   clip: rect(20px, 9999px, 74px, 0); }
//	  10% {   clip: rect(70px, 9999px, 77px, 0); }
//	  15.0% {   clip: rect(83px, 9999px, 85px, 0); }
//	  20% {   clip: rect(50px, 9999px, 18px, 0); }
//	  25% {   clip: rect(36px, 9999px, 59px, 0); }
//	  30.0% {   clip: rect(38px, 9999px, 14px, 0); }
//	  35% {   clip: rect(92px, 9999px, 41px, 0); }
//	  40% {   clip: rect(20px, 9999px, 22px, 0); }
//	  45% {   clip: rect(44px, 9999px, 7px, 0); }
//	  50% {   clip: rect(88px, 9999px, 50px, 0); }
//	  55.0% {   clip: rect(78px, 9999px, 89px, 0); }
//	  60.0% {   clip: rect(42px, 9999px, 73px, 0); }
//	  65% {   clip: rect(91px, 9999px, 17px, 0); }
//	  70% {   clip: rect(59px, 9999px, 64px, 0); }
//	  75% {   clip: rect(55px, 9999px, 61px, 0); }
//	  80% {   clip: rect(85px, 9999px, 42px, 0); }
//	  85.0% {   clip: rect(100px, 9999px, 24px, 0); }
//	  90% {   clip: rect(56px, 9999px, 45px, 0); }
//	  95% {   clip: rect(86px, 9999px, 62px, 0); }
//	  100% {   clip: rect(86px, 9999px, 47px, 0); }
//	}
//	&:after {
//		content: attr(data-text);
//		position: absolute;
//		z-index:1;
//		right: 2px;
//		text-shadow: -1px 0 red;
//		top: 0;
//		color: black;
//		background: white;
//		overflow: hidden;
//		clip: rect(0, 900px, 0, 0);
//		animation: noise-anim 2s infinite linear alternate-reverse;
//	}
//
//	@keyframes noise-anim-2 {
//	  0% {   clip: rect(50px, 9999px, 70px, 0); }
//	  5% {   clip: rect(80px, 9999px, 10px, 0); }
//	  10% {   clip: rect(1px, 9999px, 62px, 0); }
//	  15.0% {   clip: rect(82px, 9999px, 40px, 0); }
//	  20% {   clip: rect(32px, 9999px, 63px, 0); }
//	  25% {   clip: rect(63px, 9999px, 31px, 0); }
//	  30.0% {   clip: rect(15px, 9999px, 39px, 0); }
//	  35% {   clip: rect(17px, 9999px, 52px, 0); }
//	  40% {   clip: rect(66px, 9999px, 59px, 0); }
//	  45% {   clip: rect(3px, 9999px, 58px, 0); }
//	  50% {   clip: rect(56px, 9999px, 28px, 0); }
//	  55.0% {   clip: rect(90px, 9999px, 91px, 0); }
//	  60.0% {   clip: rect(94px, 9999px, 97px, 0); }
//	  65% {   clip: rect(18px, 9999px, 79px, 0); }
//	  70% {   clip: rect(59px, 9999px, 37px, 0); }
//	  75% {   clip: rect(35px, 9999px, 83px, 0); }
//	  80% {   clip: rect(51px, 9999px, 57px, 0); }
//	  85.0% {   clip: rect(28px, 9999px, 63px, 0); }
//	  90% {   clip: rect(98px, 9999px, 55px, 0); }
//	  95% {   clip: rect(69px, 9999px, 94px, 0); }
//	  100% {   clip: rect(56px, 9999px, 1px, 0); }
//	}
//	&:before {
//		content: attr(data-text);
//		position: absolute;
//		z-index:1;
//		right: -2px;
//		text-shadow: 1px 0 blue;
//		top: 0;
//		color: black;
//		background: white;
//		overflow: hidden;
//		clip: rect(0, 900px, 0, 0);
//		animation: noise-anim-2 3s infinite linear alternate-reverse;
//	}
//}

/* ---------------------------------------------------
/////////////////////// FLEX /////////////////////////
---------------------------------------------------- */
@mixin disflex($flex: flex, $justify: null, $alignitm: null, $flow: null, $dir: null){
	display: $flex;
	justify-content: $justify;
	flex-flow: $flow;
	align-items: $alignitm;
	flex-direction: $dir;

	// Display	
	@if $flex != null {
		@if $flex == flex{
		display: -webkit-box;
		display: -webkit-flex;
		display: -moz-flex;
		display: -ms-flexbox;
			
		} @else if $flex == inline-flex{
			display: -webkit-inline-box;
			display: -webkit-inline-flex;
			display: -moz-inline-flex;
			display: -ms-inline-flexbox;
			display: inline-flex;
		}
	}
	
	// Justify-content
	@else if $justify != null{
		@if $justify == flex-end {
			-webkit-box-pack: end;
			-ms-flex-pack: end;
		} @else if $justify == space-between {
			-webkit-box-pack: justify;
			-ms-flex-pack: justify;
		} @else if $justify == space-around {
			-ms-flex-pack: distribute;
		} @else{
			-webkit-box-pack: $justify;
			-ms-flex-pack: $justify;
		}
		-webkit-justify-content: $justify;
		-moz-justify-content: $justify;
		justify-content: $justify;
	}
	
	// alignitm
	@else if $alignitm != null{
		@if $alignitm == flex-start {
			-webkit-box-align: start;
			-ms-flex-align: start;
		} @else if $alignitm == flex-end {
			-webkit-box-align: end;
			-ms-flex-align: end;
		} @else {
			-webkit-box-align: $alignitm;
			-ms-flex-align: $alignitm;
		}
		-webkit-alignitm: $alignitm;
		-moz-alignitm: $alignitm;
		alignitm: $alignitm;
	}
	
	// Flex-flow
	@else if $flow != null{
		-webkit-flex-flow: $flow;
		-moz-flex-flow: $flow;
		-ms-flex-flow: $flow;
		flex-flow: $flow;
	}
	
	// Flex-direction
	@else if $dir != null{
		@if $dir == row-reverse {
			-webkit-box-direction: reverse;
			-webkit-box-orient: horizontal;
		} @else if $dir == column {
			-webkit-box-direction: normal;
			-webkit-box-orient: vertical;
		} @else if $dir == column-reverse {
			-webkit-box-direction: reverse;
			-webkit-box-orient: vertical;
		} @else {
			-webkit-box-direction: normal;
			-webkit-box-orient: horizontal;
		}
		-webkit-flex-direction: $dir;
		-moz-flex-direction: $dir;
		-ms-flex-direction: $dir;
		flex-direction: $dir;
	}
}

/* ---------------------------------------------------
////////////////// Width & Height ////////////////////
---------------------------------------------------- */

@mixin sizebase($width:100%, $height:100%){
	width:$width;
	height:$height;
}


/* ---------------------------------------------------
////////////////// LINE SEPARATOR ////////////////////
---------------------------------------------------- */

@mixin beforeline($position, $width, $height, $top, $left){
	content:'';
	position:$position;
	top: $top;
	left: $left;
	width: $width;
	height: $height;
	background-repeat:no-repeat;
}



/* ---------------------------------------------------
///////////////////// ANIMATION ///////////////////////
---------------------------------------------------- */
@mixin keyframe($animName) {
    @-webkit-keyframes #{$animName} {
        @content;
    }

    @-moz-keyframes #{$animName} {
        @content;
    }

    @-o-keyframes #{$animName} {
        @content;
    }

    @keyframes #{$animName} {
        @content;
    }
}


/* ---------------------------------------------------
//////////////////// RESPONSIVE //////////////////////
---------------------------------------------------- */
@mixin breakpoint($class:null, $customSize:null, $format:portrait){
	@if $class == xs {
		@media screen and (max-width: 420px) { @content; }
	}
	
	@else if $class == sm {
		@media screen and (max-width: 768px) { @content; }
	}

	@else if $class == md {
		@media screen and (max-width: 1072px) { @content; }
	}
	
	@else if $class == lg{
		@media screen and (max-width: 1366px) { @content; }
	}
	
	@else if ($customSize){
		@media screen and (max-width: $customSize) { @content; }
	}
	
	@else if ($format == landscape, $customSize){
		@media (orientation: landscape) and (max-height: 812px){ @content; }
	}
	
	@else {
		@warn "Breakpoint mixin supports: xs, sm, md, lg";
	}
}